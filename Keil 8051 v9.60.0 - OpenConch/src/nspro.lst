C51 COMPILER V9.60.0.0   NSPRO                                                             02/05/2023 22:19:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE NSPRO
OBJECT MODULE PLACED IN .\src\nspro.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Mitch\S
                    -implicityStudio\v5_workspace\HOJA-USB-EFM8UB1\src\nspro.c OMF2 LARGE ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9
                    -,SIZE) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Mitch\SimplicityStudio\v5_workspace\HOJA-USB-EFM8UB
                    -1\inc;C:\Users\Mitch\SimplicityStudio\v5_workspace\HOJA-USB-EFM8UB1\inc\config;C:/SiliconLabs/SimplicityStudio/v5/develo
                    -per/sdks/8051/v4.2.4//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Lib/efm8_usb/inc;C:
                    -/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/peripheral_driver/inc;C:/SiliconLabs/Simplic
                    -ityStudio/v5/developer/sdks/8051/v4.2.4//Lib/efm8_usbc/lib_kernel/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/
                    -8051/v4.2.4//Lib/efm8_usbc/lib_usbc_pd/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/shared/
                    -si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/inc) REGFILE(HOJA-USB-EFM8UB1.O
                    -RC) PRINT(.\src\nspro.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OA OBJECT(.\src\nspro.OBJ)

line level    source

   1          /*
   2           * nintendo.c
   3           *
   4           *  Created on: Sep 14, 2022
   5           *      Author: Mitch
   6           */
   7          
   8          #include "nspro.h"
*** WARNING C318 IN LINE 11 OF C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/peripheral_
             -driver/inc\smb_0.h: can't open file 'efm8_config.h'
   9          
  10          nspro_input_s nspro_reportBuffer = {0};
  11          
  12          void nsproUpdateReport()
  13          {
  14   1        uint8_t lr = 1;
  15   1        uint8_t ud = 1;
  16   1      
  17   1        // Set all the right bits
  18   1        nspro_reportBuffer.buttons_1.button_a    = i2c_input_buffer.buttons_1.button_right;
  19   1        nspro_reportBuffer.buttons_1.button_b    = i2c_input_buffer.buttons_1.button_down;
  20   1        nspro_reportBuffer.buttons_1.button_x    = i2c_input_buffer.buttons_1.button_up;
  21   1        nspro_reportBuffer.buttons_1.button_y    = i2c_input_buffer.buttons_1.button_left;
  22   1      
  23   1        nspro_reportBuffer.buttons_1.trigger_l   = i2c_input_buffer.buttons_2.trigger_l;
  24   1        nspro_reportBuffer.buttons_1.trigger_r   = i2c_input_buffer.buttons_2.trigger_r;
  25   1        nspro_reportBuffer.buttons_1.trigger_zl  = i2c_input_buffer.buttons_2.trigger_zl;
  26   1        nspro_reportBuffer.buttons_1.trigger_zr  = i2c_input_buffer.buttons_2.trigger_zr;
  27   1      
  28   1        nspro_reportBuffer.buttons_2.button_minus    = i2c_input_buffer.buttons_2.button_select;
  29   1        nspro_reportBuffer.buttons_2.button_plus     = i2c_input_buffer.buttons_2.button_start;
  30   1        nspro_reportBuffer.buttons_2.button_capture  = i2c_input_buffer.buttons_3.button_capture;
  31   1        nspro_reportBuffer.buttons_2.button_home     = i2c_input_buffer.buttons_3.button_home;
  32   1      
  33   1        nspro_reportBuffer.buttons_2.stick_left = i2c_input_buffer.buttons_2.button_stick_left;
  34   1        nspro_reportBuffer.buttons_2.stick_right = i2c_input_buffer.buttons_2.button_stick_right;
  35   1      
  36   1        nspro_reportBuffer.stick_left_x    = i2c_input_buffer.ls_x;
  37   1        nspro_reportBuffer.stick_left_y    = i2c_input_buffer.ls_y;
  38   1        nspro_reportBuffer.stick_right_x    = i2c_input_buffer.rs_x;
  39   1        nspro_reportBuffer.stick_right_y    = i2c_input_buffer.rs_y;
  40   1      
  41   1        lr = 1 - i2c_input_buffer.buttons_1.dpad_left + i2c_input_buffer.buttons_1.dpad_right;
  42   1        ud = 1 - i2c_input_buffer.buttons_1.dpad_down + i2c_input_buffer.buttons_1.dpad_up;
  43   1      
  44   1        nspro_reportBuffer.dpad_hat    = (uint8_t) getHatDir(DPAD_TYPE_DINPUT, lr, ud);
  45   1      
C51 COMPILER V9.60.0.0   NSPRO                                                             02/05/2023 22:19:45 PAGE 2   

  46   1        if (sendReport)
  47   1        {
  48   2            sendReport = false;
  49   2            USBD_Write(EP1IN,
  50   2               (uint8_t *) &nspro_reportBuffer,
  51   2               NSPRO_INPUT_SIZE,
  52   2               true);
  53   2        }
  54   1      
  55   1      }
  56          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    356    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
