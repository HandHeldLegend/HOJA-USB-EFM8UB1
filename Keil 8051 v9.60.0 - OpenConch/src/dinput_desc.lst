C51 COMPILER V9.60.0.0   DINPUT_DESC                                                       01/12/2023 16:52:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DINPUT_DESC
OBJECT MODULE PLACED IN .\src\dinput_desc.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Mitch\S
                    -implicityStudio\v5_workspace\HOJA-USB-EFM8UB1\src\dinput_desc.c OMF2 LARGE ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTI
                    -MIZE(9,SIZE) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Mitch\SimplicityStudio\v5_workspace\HOJA-USB-
                    -EFM8UB1\inc;C:\Users\Mitch\SimplicityStudio\v5_workspace\HOJA-USB-EFM8UB1\inc\config;C:/SiliconLabs/SimplicityStudio/v5/
                    -developer/sdks/8051/v4.2.4//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Lib/efm8_usb/
                    -inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/peripheral_driver/inc;C:/SiliconLabs/S
                    -implicityStudio/v5/developer/sdks/8051/v4.2.4//Lib/efm8_usbc/lib_kernel/inc;C:/SiliconLabs/SimplicityStudio/v5/developer
                    -/sdks/8051/v4.2.4//Lib/efm8_usbc/lib_usbc_pd/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/s
                    -hared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/inc) REGFILE(HOJA-USB-EFM
                    -8UB1.ORC) PRINT(.\src\dinput_desc.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OA OBJECT(.\src\dinput_desc.OBJ)

line level    source

   1          /*
   2           * dinput_desc.c
   3           *
   4           *  Created on: Dec 13, 2022
   5           *      Author: Mitch
   6           */
   7          
   8          #include "dinput_desc.h"
*** WARNING C318 IN LINE 11 OF C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/peripheral_
             -driver/inc\smb_0.h: can't open file 'efm8_config.h'
   9          
  10          UTF16LE_PACKED_STATIC_CONST_STRING_DESC( dinput_prod_descriptor[], DINPUT_PROD_STRING, DINPUT_PROD_SIZE);
  11          
  12          // Generic Gamepad HID descriptor
  13          extern SI_SEGMENT_VARIABLE(dinput_hid_descriptor[DINPUT_HID_SIZE],
  15                              const uint8_t,
  15                              SI_SEG_CODE) =
  16          {
  17              0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
  18          
  19                  0x09, 0x05,        // Usage (Game Pad)
  20                  0xA1, 0x01,        // Collection (Application)
  21                      0xA1, 0x01,         // Collection (Application)
  22                          0x85, 0x01,        //   Report ID (1)
  23          
  24                          0x05, 0x09,        //   Usage Page (Button)
  25                          0x15, 0x00,        //   Logical Minimum (0)
  26                          0x25, 0x01,        //   Logical Maximum (1)
  27                          0x35, 0x00,        //   Physical Minimum (0)
  28                          0x45, 0x01,        //   Physical Maximum (1)
  29                          0x75, 0x01,        //   Report Size (1)
  30                          0x95, 0x0E,        //   Report Count (14)
  31                          0x19, 0x01,        //   Usage Minimum (0x01)
  32                          0x29, 0x0E,        //   Usage Maximum (0x0E)
  33                          0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Positio
             -n)
  34          
  35                          0x95, 0x02,        //   Report Count (2)
  36                          0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Posi
             -tion)
  37          
  38                          0x05, 0x01,        //   Usage Page (Generic Desktop Ctrls)
  39                          0x25, 0x07,        //   Logical Maximum (7)
  40                          0x46, 0x3B, 0x01,  //   Physical Maximum (315)
  41                          0x75, 0x04,        //   Report Size (4)
  42                          0x95, 0x01,        //   Report Count (1)
  43                          0x65, 0x14,        //   Unit (System: English Rotation, Length: Centimeter)
C51 COMPILER V9.60.0.0   DINPUT_DESC                                                       01/12/2023 16:52:33 PAGE 2   

  44                          0x09, 0x39,        //   Usage (Hat switch)
  45                          0x81, 0x42,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
  46                          0x65, 0x00,        //   Unit (None)
  47                          0x95, 0x01,        //   Report Count (1)
  48                          0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Posi
             -tion)
  49          
  50                          0x26, 0xFF, 0x00,  //   Logical Maximum (255)
  51                          0x46, 0xFF, 0x00,  //   Physical Maximum (255)
  52                          0x09, 0x30,        //   Usage (X)
  53                          0x09, 0x31,        //   Usage (Y)
  54                          0x09, 0x32,        //   Usage (Z)
  55                          0x09, 0x35,        //   Usage (Rz)
  56                          0x09, 0x33,        //   Usage (axis)
  57                          0x09, 0x34,         // Usage (axis)
  58          
  59                          0x75, 0x08,        //   Report Size (8)
  60                          0x95, 0x06,        //   Report Count (6)
  61                          0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Positio
             -n)
  62          
  63                      0xc0,
  64          
  65                      0xA1, 0x01,         // Collection (Application)
  66                          0x06, 0x00, 0xFF,      //            USAGE_PAGE (Vendor Defined Page 1)
  67                          0x09, 0x01,            //            USAGE (Vendor Usage 1)
  68                          0x85, 0x02,            //           Report ID (2)
  69                          0x15, 0x00,            //            LOGICAL_MINIMUM (0)
  70                          0x26, 0xff, 0x00,       //            LOGICAL_MAXIMUM (255)
  71                          0x75, 0x08,            //            REPORT_SIZE (8)
  72                          0x95, 0x09,            //            REPORT_COUNT (11)
  73                          0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Positio
             -n)
  74                      0xc0,
  75          
  76                      0xA1, 0x01,         // Collection (Application)
  77                          0x06, 0x00, 0xFF,      //            USAGE_PAGE (Vendor Defined Page 1)
  78                          0x09, 0x01,            //            USAGE (Vendor Usage 1)
  79                          0x85, 0x02,            //           Report ID (2)
  80                          0x15, 0x00,            //            LOGICAL_MINIMUM (0)
  81                          0x26, 0xff, 0x00,       //            LOGICAL_MAXIMUM (255)
  82                          0x75, 0x08,            //            REPORT_SIZE (8)
  83                          0x95, 0x0B,            //            REPORT_COUNT (11)
  84                          0x91, 0x02,            //            OUTPUT (Data,Var,Abs)
  85                      0xc0,
  86                  // 125 bytes
  87                  0xC0
  88          };
  89          
  90          // Dinput Device Description
  91          extern SI_SEGMENT_VARIABLE(dinput_device_descriptor[],
  93                              const USB_DeviceDescriptor_TypeDef,
  93                              SI_SEG_CODE) =
  94          {
  95            USB_DEVICE_DESCSIZE,             // bLength
  96            USB_DEVICE_DESCRIPTOR,           // bLength
  97            htole16(0x0110),                 // bcdUSB
  98            0,                               // bDeviceClass
  99            0,                               // bDeviceSubClass
 100            0,                               // bDeviceProtocol
 101            64,                              // bMaxPacketSize
 102            NSPRO_VENDOR_ID,                   // idVendor
 103            NSPRO_PROD_ID,                  // idProduct
C51 COMPILER V9.60.0.0   DINPUT_DESC                                                       01/12/2023 16:52:33 PAGE 3   

 104            htole16(0x0100),                 // bcdDevice
 105            1,                               // iManufacturer
 106            2,                               // iProduct
 107            0,                               // iSerialNumber
 108            1,                               // bNumConfigurations
 109          };
 110          
 111          // Dinput Config Description
 112          extern SI_SEGMENT_VARIABLE(dinput_config_descriptor[],
 114                              const uint8_t,
 114                              SI_SEG_CODE) =
 115          {
 116            USB_CONFIG_DESCSIZE,             // bLength
 117            USB_CONFIG_DESCRIPTOR,           // bLength
 118            0x29,                            // wTotalLength(LSB)
 119            0x00,                            // wTotalLength(MSB)
 120            1,                               // bNumInterfaces
 121            1,                               // bConfigurationValue
 122            0,                               // iConfiguration
 123          
 124            CONFIG_DESC_BM_RESERVED_D7,     // bmAttrib: usb powered,
 125          
 126            CONFIG_DESC_MAXPOWER_mA(500),    // bMaxPower: 500 mA
 127          
 128            //Interface 0 Descriptor
 129            USB_INTERFACE_DESCSIZE,          // bLength
 130            USB_INTERFACE_DESCRIPTOR,        // bDescriptorType
 131            0,                               // bInterfaceNumber
 132            0,                               // bAlternateSetting
 133            1,                               // bNumEndpoints
 134            3,                               // bInterfaceClass: HID (Human Interface Device)
 135            0,                               // bInterfaceSubClass
 136            0,                               // bInterfaceProtocol
 137            0,                               // iInterface
 138          
 139            //HID Descriptor
 140            USB_HID_DESCSIZE,                // bLength
 141            USB_HID_DESCRIPTOR,              // bLength
 142            0x11,                            // bcdHID (LSB)
 143            0x01,                            // bcdHID (MSB)
 144            0,                               // bCountryCode
 145            1,                               // bNumDescriptors
 146            USB_HID_REPORT_DESCRIPTOR,       // bDescriptorType
 147            sizeof( dinput_hid_descriptor ),     // wDescriptorLength(LSB)
 148            sizeof( dinput_hid_descriptor ) >> 8,    // wDescriptorLength(MSB)
 149          
 150            //Endpoint 1 IN Descriptor
 151            USB_ENDPOINT_DESCSIZE,           // bLength
 152            USB_ENDPOINT_DESCRIPTOR,         // bDescriptorType
 153            0x81,                            // bEndpointAddress
 154            USB_EPTYPE_INTR,                 // bAttrib
 155            0x40,                            // wMaxPacketSize (LSB)
 156            0x00,                            // wMaxPacketSize (MSB)
 157            0x02,                            // bInterval (2ms)
 158          
 159            //Endpoint 2 IN Descriptor
 160              USB_ENDPOINT_DESCSIZE,           // bLength
 161              USB_ENDPOINT_DESCRIPTOR,         // bDescriptorType
 162              0x02,                            // bEndpointAddress
 163              USB_EPTYPE_INTR,                 // bAttrib
 164              0x40,                            // wMaxPacketSize (LSB)
 165              0x00,                            // wMaxPacketSize (MSB)
 166              0x02,                            // bInterval (2ms)
C51 COMPILER V9.60.0.0   DINPUT_DESC                                                       01/12/2023 16:52:33 PAGE 4   

 167          };
 168          
 169          SI_SEGMENT_VARIABLE_SEGMENT_POINTER(dinput_UsbStringTable_USEnglish[], static const USB_StringDescriptor_T
             -ypeDef, SI_SEG_GENERIC, const SI_SEG_CODE) =
 170          {
 171            (SI_VARIABLE_SEGMENT_POINTER(, uint8_t, SI_SEG_CODE))global_lang_descriptor,
 172            global_mfr_descriptor,
 173            dinput_prod_descriptor,
 174            global_serial_descriptor
 175          };
 176          
 177          // dinput initialization Struct
 178          extern SI_SEGMENT_VARIABLE(dinput_init_struct,
 180                              const USBD_Init_TypeDef,
 180                              SI_SEG_CODE) =
 181          {
 182            (SI_VARIABLE_SEGMENT_POINTER(, USB_DeviceDescriptor_TypeDef, SI_SEG_GENERIC))dinput_device_descriptor,  
             -            // deviceDescriptor
 183            (SI_VARIABLE_SEGMENT_POINTER(, USB_ConfigurationDescriptor_TypeDef, SI_SEG_GENERIC))dinput_config_descri
             -ptor,       // configDescriptor
 184            (SI_VARIABLE_SEGMENT_POINTER(, USB_StringTable_TypeDef, SI_SEG_GENERIC))dinput_UsbStringTable_USEnglish,
             -   // stringDescriptors
 185            sizeof(dinput_UsbStringTable_USEnglish) / sizeof(dinput_UsbStringTable_USEnglish[0])                    
             -        // numberOfStrings
 186          };


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    247    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
