C51 COMPILER V9.60.0.0   DINPUT_DESC                                                       12/14/2022 01:42:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DINPUT_DESC
OBJECT MODULE PLACED IN .\src\dinput_desc.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Mitch\S
                    -implicityStudio\v5_workspace\HOJA-USB-EFM8UB1\src\dinput_desc.c OMF2 LARGE ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTI
                    -MIZE(9,SIZE) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Mitch\SimplicityStudio\v5_workspace\HOJA-USB-
                    -EFM8UB1\inc;C:\Users\Mitch\SimplicityStudio\v5_workspace\HOJA-USB-EFM8UB1\inc\config;C:/SiliconLabs/SimplicityStudio/v5/
                    -developer/sdks/8051/v4.2.4//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Lib/efm8_usb/
                    -inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/peripheral_driver/inc;C:/SiliconLabs/S
                    -implicityStudio/v5/developer/sdks/8051/v4.2.4//Lib/efm8_usbc/lib_kernel/inc;C:/SiliconLabs/SimplicityStudio/v5/developer
                    -/sdks/8051/v4.2.4//Lib/efm8_usbc/lib_usbc_pd/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/s
                    -hared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/inc) REGFILE(HOJA-USB-EFM
                    -8UB1.ORC) PRINT(.\src\dinput_desc.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OA OBJECT(.\src\dinput_desc.OBJ)

line level    source

   1          /*
   2           * dinput_desc.c
   3           *
   4           *  Created on: Dec 13, 2022
   5           *      Author: Mitch
   6           */
   7          
   8          #include "dinput_desc.h"
*** WARNING C318 IN LINE 11 OF C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.4//Device/EFM8UB1/peripheral_
             -driver/inc\smb_0.h: can't open file 'efm8_config.h'
   9          
  10          UTF16LE_PACKED_STATIC_CONST_STRING_DESC( dinput_prod_descriptor[], DINPUT_PROD_STRING, DINPUT_PROD_SIZE);
  11          
  12          // Generic Gamepad HID descriptor
  13          extern SI_SEGMENT_VARIABLE(dinput_hid_descriptor[DINPUT_HID_SIZE],
  15                              const uint8_t,
  15                              SI_SEG_CODE) =
  16          {
  17              0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
  18              0x09, 0x05,        // Usage (Game Pad)
  19              0xA1, 0x01,        // Collection (Application)
  20          
  21              0x15, 0x00,        //   Logical Minimum (0)
  22              0x25, 0x01,        //   Logical Maximum (1)
  23              0x35, 0x00,        //   Physical Minimum (0)
  24              0x45, 0x01,        //   Physical Maximum (1)
  25              0x75, 0x01,        //   Report Size (1)
  26              0x95, 0x0E,        //   Report Count (14)
  27              0x05, 0x09,        //   Usage Page (Button)
  28              0x19, 0x01,        //   Usage Minimum (0x01)
  29              0x29, 0x0E,        //   Usage Maximum (0x0E)
  30              0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
  31          
  32              0x95, 0x02,        //   Report Count (2)
  33              0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
  34          
  35              0x05, 0x01,        //   Usage Page (Generic Desktop Ctrls)
  36              0x25, 0x07,        //   Logical Maximum (7)
  37              0x46, 0x3B, 0x01,  //   Physical Maximum (315)
  38              0x75, 0x04,        //   Report Size (4)
  39              0x95, 0x01,        //   Report Count (1)
  40              0x65, 0x14,        //   Unit (System: English Rotation, Length: Centimeter)
  41              0x09, 0x39,        //   Usage (Hat switch)
  42              0x81, 0x42,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
  43              0x65, 0x00,        //   Unit (None)
  44              0x95, 0x01,        //   Report Count (1)
  45              0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
C51 COMPILER V9.60.0.0   DINPUT_DESC                                                       12/14/2022 01:42:54 PAGE 2   

  46          
  47              0x26, 0xFF, 0x00,  //   Logical Maximum (255)
  48              0x46, 0xFF, 0x00,  //   Physical Maximum (255)
  49              0x09, 0x30,        //   Usage (X)
  50              0x09, 0x31,        //   Usage (Y)
  51              0x09, 0x32,        //   Usage (Z)
  52              0x09, 0x35,        //   Usage (Rz)
  53          
  54              // EXPERIMENTAL ADDITIONS
  55              0x09, 0x33,
  56              0x09, 0x34,
  57          
  58              0x75, 0x08,        //   Report Size (8)
  59              0x95, 0x06,        //   Report Count (6)
  60              0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
  61          
  62              0x75, 0x08,        //   Report Size (8)
  63              0x95, 0x01,        //   Report Count (1)
  64              0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
  65              0x05, 0x0C,        //   Usage Page (Consumer)
  66          
  67              0x09, 0x00,        //   Usage (Unassigned)
  68              0x15, 0x80,        //   Logical Minimum (-128)
  69              0x25, 0x7F,        //   Logical Maximum (127)
  70              0x75, 0x08,        //   Report Size (8)
  71              0x95, 0x40,        //   Report Count (64)
  72              0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-vola
             -tile)
  73          
  74              0xC0,              // End Collection
  75              // 94 bytes
  76          };
  77          
  78          // Dinput Device Description
  79          extern SI_SEGMENT_VARIABLE(dinput_device_descriptor[],
  81                              const USB_DeviceDescriptor_TypeDef,
  81                              SI_SEG_CODE) =
  82          {
  83            USB_DEVICE_DESCSIZE,             // bLength
  84            USB_DEVICE_DESCRIPTOR,           // bLength
  85            htole16(0x0110),                 // bcdUSB
  86            0,                               // bDeviceClass
  87            0,                               // bDeviceSubClass
  88            0,                               // bDeviceProtocol
  89            64,                              // bMaxPacketSize
  90            NSPRO_VENDOR_ID,                   // idVendor
  91            NSPRO_PROD_ID,                  // idProduct
  92            htole16(0x0100),                 // bcdDevice
  93            1,                               // iManufacturer
  94            2,                               // iProduct
  95            0,                               // iSerialNumber
  96            1,                               // bNumConfigurations
  97          };
  98          
  99          // Dinput Config Description
 100          extern SI_SEGMENT_VARIABLE(dinput_config_descriptor[],
 102                              const uint8_t,
 102                              SI_SEG_CODE) =
 103          {
 104            USB_CONFIG_DESCSIZE,             // bLength
 105            USB_CONFIG_DESCRIPTOR,           // bLength
 106            0x22,                            // wTotalLength(LSB)
 107            0x00,                            // wTotalLength(MSB)
C51 COMPILER V9.60.0.0   DINPUT_DESC                                                       12/14/2022 01:42:54 PAGE 3   

 108            1,                               // bNumInterfaces
 109            1,                               // bConfigurationValue
 110            0,                               // iConfiguration
 111          
 112            CONFIG_DESC_BM_RESERVED_D7,     // bmAttrib: usb powered,
 113          
 114            CONFIG_DESC_MAXPOWER_mA(500),    // bMaxPower: 500 mA
 115          
 116            //Interface 0 Descriptor
 117            USB_INTERFACE_DESCSIZE,          // bLength
 118            USB_INTERFACE_DESCRIPTOR,        // bDescriptorType
 119            0,                               // bInterfaceNumber
 120            0,                               // bAlternateSetting
 121            1,                               // bNumEndpoints
 122            3,                               // bInterfaceClass: HID (Human Interface Device)
 123            0,                               // bInterfaceSubClass
 124            0,                               // bInterfaceProtocol
 125            0,                               // iInterface
 126          
 127            //HID Descriptor
 128            USB_HID_DESCSIZE,                // bLength
 129            USB_HID_DESCRIPTOR,              // bLength
 130            0x11,                            // bcdHID (LSB)
 131            0x01,                            // bcdHID (MSB)
 132            0,                               // bCountryCode
 133            1,                               // bNumDescriptors
 134            USB_HID_REPORT_DESCRIPTOR,       // bDescriptorType
 135            sizeof( dinput_hid_descriptor ),     // wDescriptorLength(LSB)
 136            sizeof( dinput_hid_descriptor ) >> 8,    // wDescriptorLength(MSB)
 137          
 138            //Endpoint 1 IN Descriptor
 139            USB_ENDPOINT_DESCSIZE,           // bLength
 140            USB_ENDPOINT_DESCRIPTOR,         // bDescriptorType
 141            0x81,                            // bEndpointAddress
 142            USB_EPTYPE_INTR,                 // bAttrib
 143            0x40,                            // wMaxPacketSize (LSB)
 144            0x00,                            // wMaxPacketSize (MSB)
 145            0x02,                            // bInterval (2ms)
 146          };
 147          
 148          SI_SEGMENT_VARIABLE_SEGMENT_POINTER(dinput_UsbStringTable_USEnglish[], static const USB_StringDescriptor_T
             -ypeDef, SI_SEG_GENERIC, const SI_SEG_CODE) =
 149          {
 150            (SI_VARIABLE_SEGMENT_POINTER(, uint8_t, SI_SEG_CODE))global_lang_descriptor,
 151            global_mfr_descriptor,
 152            dinput_prod_descriptor,
 153            global_serial_descriptor
 154          };
 155          
 156          // dinput initialization Struct
 157          extern SI_SEGMENT_VARIABLE(dinput_init_struct,
 159                              const USBD_Init_TypeDef,
 159                              SI_SEG_CODE) =
 160          {
 161            (SI_VARIABLE_SEGMENT_POINTER(, USB_DeviceDescriptor_TypeDef, SI_SEG_GENERIC))dinput_device_descriptor,  
             -            // deviceDescriptor
 162            (SI_VARIABLE_SEGMENT_POINTER(, USB_ConfigurationDescriptor_TypeDef, SI_SEG_GENERIC))dinput_config_descri
             -ptor,       // configDescriptor
 163            (SI_VARIABLE_SEGMENT_POINTER(, USB_StringTable_TypeDef, SI_SEG_GENERIC))dinput_UsbStringTable_USEnglish,
             -   // stringDescriptors
 164            sizeof(dinput_UsbStringTable_USEnglish) / sizeof(dinput_UsbStringTable_USEnglish[0])                    
             -        // numberOfStrings
 165          };
C51 COMPILER V9.60.0.0   DINPUT_DESC                                                       12/14/2022 01:42:54 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    213    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
