C51 COMPILER V9.60.0.0   NINTENDO                                                          09/15/2022 21:04:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE NINTENDO
OBJECT MODULE PLACED IN .\src\nintendo.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Mitch\S
                    -implicityStudio\v5_workspace\HOJA-USB-EFM8UB1\src\nintendo.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FL
                    -OATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Mitch\SimplicityStudio\v5_wo
                    -rkspace\HOJA-USB-EFM8UB1\inc;C:\Users\Mitch\SimplicityStudio\v5_workspace\HOJA-USB-EFM8UB1\inc\config;C:/SiliconLabs/Sim
                    -plicityStudio/v5/developer/sdks/8051/v4.2.3//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2
                    -.3//Lib/efm8_usb/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//Device/EFM8UB1/peripheral_driver/inc
                    -;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//Lib/efm8_usbc/lib_kernel/inc;C:/SiliconLabs/SimplicitySt
                    -udio/v5/developer/sdks/8051/v4.2.3//Lib/efm8_usbc/lib_usbc_pd/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051
                    -/v4.2.3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//Device/EFM8UB1/inc) REG
                    -FILE(HOJA-USB-EFM8UB1.ORC) PRINT(.\src\nintendo.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OA OBJECT(.\src\nintendo.OBJ)

line level    source

   1          /*
   2           * nintendo.c
   3           *
   4           *  Created on: Sep 14, 2022
   5           *      Author: Mitch
   6           */
   7          
   8          #include "nintendo.h"
   9          
  10          ns_input_s ns_reportBuffer = {0};
  11          
  12          // Return the proper byte format for hat direction based on
  13          // input direction.
  14          Input_Hat_Dir_Type getHatDir(uint8_t leftRight, uint8_t upDown)
  15          {
  16   1        Input_Hat_Dir_Type ret = HAT_CENTER;
  17   1      
  18   1        if (leftRight == 2)
  19   1        {
  20   2          ret = HAT_RIGHT;
  21   2          if (upDown == 2)
  22   2          {
  23   3            ret = HAT_TOP_RIGHT;
  24   3          }
  25   2          else if (upDown == 0)
  26   2          {
  27   3            ret = HAT_BOTTOM_RIGHT;
  28   3          }
  29   2        }
  30   1        else if (leftRight == 0)
  31   1        {
  32   2          ret = HAT_LEFT;
  33   2          if (upDown == 2)
  34   2          {
  35   3            ret = HAT_TOP_LEFT;
  36   3          }
  37   2          else if (upDown == 0)
  38   2          {
  39   3            ret = HAT_BOTTOM_LEFT;
  40   3          }
  41   2        }
  42   1      
  43   1        else if (upDown == 2)
  44   1        {
  45   2          ret = HAT_TOP;
  46   2        }
  47   1        else if (upDown == 0)
C51 COMPILER V9.60.0.0   NINTENDO                                                          09/15/2022 21:04:22 PAGE 2   

  48   1        {
  49   2          ret = HAT_BOTTOM;
  50   2        }
  51   1      
  52   1        return ret;
  53   1      }
  54          
  55          void updateNSReport()
  56          {
  57   1        uint8_t lr = 1;
  58   1        uint8_t ud = 1;
  59   1      
  60   1        // Set all the right bits
  61   1        ns_reportBuffer.buttons_1.button_a    = i2c_input_buffer.buttons_1.button_a;
  62   1        ns_reportBuffer.buttons_1.button_b    = i2c_input_buffer.buttons_1.button_b;
  63   1        ns_reportBuffer.buttons_1.button_x    = i2c_input_buffer.buttons_1.button_x;
  64   1        ns_reportBuffer.buttons_1.button_y    = i2c_input_buffer.buttons_1.button_y;
  65   1      
  66   1        ns_reportBuffer.buttons_1.trigger_l   = i2c_input_buffer.buttons_2.trigger_l;
  67   1        ns_reportBuffer.buttons_1.trigger_r   = i2c_input_buffer.buttons_2.trigger_r;
  68   1        ns_reportBuffer.buttons_1.trigger_zl  = i2c_input_buffer.buttons_2.trigger_zl;
  69   1        ns_reportBuffer.buttons_1.trigger_zr  = i2c_input_buffer.buttons_2.trigger_zr;
  70   1      
  71   1        ns_reportBuffer.buttons_2.button_minus    = i2c_input_buffer.buttons_2.button_minus;
  72   1        ns_reportBuffer.buttons_2.button_plus     = i2c_input_buffer.buttons_2.button_plus;
  73   1        ns_reportBuffer.buttons_2.button_capture  = i2c_input_buffer.buttons_2.button_capture;
  74   1        ns_reportBuffer.buttons_2.button_home     = i2c_input_buffer.buttons_2.button_home;
  75   1      
  76   1        ns_reportBuffer.buttons_2.stick_left = i2c_input_buffer.buttons_3.stick_left;
  77   1        ns_reportBuffer.buttons_2.stick_right = i2c_input_buffer.buttons_3.stick_right;
  78   1      
  79   1        ns_reportBuffer.stick_left_x    = i2c_input_buffer.stick_left_x;
  80   1        ns_reportBuffer.stick_left_y    = i2c_input_buffer.stick_left_y;
  81   1        ns_reportBuffer.stick_right_x    = i2c_input_buffer.stick_right_x;
  82   1        ns_reportBuffer.stick_right_y    = i2c_input_buffer.stick_right_y;
  83   1      
  84   1        lr = 1 - i2c_input_buffer.buttons_1.dpad_left + i2c_input_buffer.buttons_1.dpad_right;
  85   1        ud = 1 - i2c_input_buffer.buttons_1.dpad_down + i2c_input_buffer.buttons_1.dpad_up;
  86   1      
  87   1        ns_reportBuffer.dpad_hat    = (uint8_t) getHatDir(lr, ud);
  88   1      
  89   1        sendReport = true;
  90   1      }
  91          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    376    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
